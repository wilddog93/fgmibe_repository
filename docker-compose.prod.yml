# docker-compose.prod.yml

services:
  node-app:
    build:
      context: .
      args:
        BUILD_DIR: build
    image: node-app:prod
    container_name: node-app-prod
    working_dir: /usr/src/node-app
    env_file:
      - .env # <-- pakai file .env
    command: ['./start.sh'] # atau node build/index.js jika mau
    restart: unless-stopped
    expose:
      - '4000'
    depends_on:
      postgresdb:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'wget -qO- http://localhost:4000/health || exit 1']
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [node-network]

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/certbot:/etc/letsencrypt
      - ./nginx/html:/usr/share/nginx/html
    depends_on: [node-app]
    networks: [node-network]

  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: unless-stopped
    volumes:
      - ./nginx/certbot:/etc/letsencrypt
      - ./nginx/html:/usr/share/nginx/html
    entrypoint: >
      sh -c "trap exit TERM; while :; do
      certbot renew --webroot -w /usr/share/nginx/html --quiet;
      sleep 12h & wait $${!};
      done"
    networks: [node-network]

networks:
  node-network:
    driver: bridge
