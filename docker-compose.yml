version: '3.8'

services:
  node-app:
    build: .
    image: node-app
    container_name: node-app
    restart: always
    expose:
      - '4000'
    depends_on:
      - postgresdb
      - redis
    volumes:
      - .:/usr/src/node-app
      - /usr/src/node-app/node_modules
    networks:
      - node-network

  postgresdb:
    image: postgres:15
    container_name: postgresdb
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
    ports:
      - '5432:5432'
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - node-network

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    networks:
      - node-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certbot:/etc/letsencrypt
      - ./nginx/html:/usr/share/nginx/html
    depends_on:
      - node-app
    networks:
      - node-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certbot:/etc/letsencrypt
      - ./nginx/html:/usr/share/nginx/html
    entrypoint: >
      sh -c "trap exit TERM; while :; do certbot renew --webroot -w /usr/share/nginx/html; sleep 12h & wait $${!}; done"
    networks:
      - node-network

  myip:
    image: jason5ng32/myip
    container_name: myip-checker
    restart: always
    ports:
      - '8080:8080'
    networks:
      - node-network

volumes:
  dbdata:
    driver: local

networks:
  node-network:
    driver: bridge
